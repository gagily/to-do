{"ast":null,"code":"var _jsxFileName = \"/home/dragana/Desktop/react_simle/simple_crud/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fSubmit = e => {\n      e.preventDefault();\n      let datas = this.state.datas;\n      let task = this.refs.task.value;\n\n      if (task) {\n        if (this.state.act === 0) {\n          //new\n          let data = {\n            task\n          };\n          datas.push(data);\n        } else {\n          //update\n          let index = this.state.index;\n          datas[index].task = task;\n        }\n\n        this.setState({\n          datas: datas,\n          act: 0\n        });\n        this.refs.myForm.reset();\n        this.refs.task.focus();\n      }\n    };\n\n    this.fRemove = i => {\n      let datas = this.state.datas;\n      datas.splice(i, 1);\n      this.setState({\n        datas: datas\n      });\n      this.refs.myForm.reset();\n      this.refs.task.focus();\n    };\n\n    this.fEdit = i => {\n      let data = this.state.datas[i];\n      this.refs.task.value = data.task;\n      this.setState({\n        act: 1,\n        index: i\n      });\n      this.refs.task.focus();\n    };\n\n    this.state = {\n      title: 'React Simple CRUD Todo Application',\n      act: 0,\n      index: '',\n      datas: []\n    };\n  }\n\n  componentDidMount() {\n    this.refs.task.focus();\n  }\n\n  render() {\n    let datas = this.state.datas;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Enter the task in the input box, click on add button to add to the list. If task is exists, you can remove it (trash can button) or edit existing entry (pen button).\"), React.createElement(\"form\", {\n      ref: \"myForm\",\n      className: \"myForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Task\"), React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"task\",\n      placeholder: \"your task\",\n      className: \"formField form-control col-sm-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: e => this.fSubmit(e),\n      className: \"myButton btn btn-success ml-2 btn-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"ADD \")), React.createElement(\"div\", {\n      className: \"todo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, datas.map((data, i) => React.createElement(\"li\", {\n      key: i,\n      className: \"myList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, i + 1, \". \", data.task, React.createElement(\"div\", {\n      className: \"buttonsStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.fRemove(i),\n      className: \"myListButton btn btn-outline-success ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-trash-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \" \"), React.createElement(\"button\", {\n      onClick: () => this.fEdit(i),\n      className: \"myListButton btn btn-outline-success ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-pencil-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), \" \"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dragana/Desktop/react_simle/simple_crud/src/App.js"],"names":["React","Component","App","constructor","props","fSubmit","e","preventDefault","datas","state","task","refs","value","act","data","push","index","setState","myForm","reset","focus","fRemove","i","splice","fEdit","title","componentDidMount","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      title: 'React Simple CRUD Todo Application',\n      act: 0,\n      index: '',\n      datas: []\n    }\n  } \n\n  componentDidMount(){\n    this.refs.task.focus();\n  }\n\n  fSubmit = (e) =>{\n    e.preventDefault();\n\n    let datas = this.state.datas;\n    let task = this.refs.task.value;\n\n\n    if(task) { \n        if(this.state.act === 0){   //new\n        let data = {\n        task\n      }\n      datas.push(data);\n      }else{                      //update\n        let index = this.state.index;\n        datas[index].task = task;\n\n      }    \n\n      this.setState({\n        datas: datas,\n        act: 0\n      });\n\n      this.refs.myForm.reset();\n      this.refs.task.focus();\n           \n    }\n    \n  }\n\n  fRemove = (i) => {\n    let datas = this.state.datas;\n    datas.splice(i,1);\n    this.setState({\n      datas: datas\n    });\n\n    this.refs.myForm.reset();\n    this.refs.task.focus();\n  }\n\n  fEdit = (i) => {\n    let data = this.state.datas[i];\n    this.refs.task.value = data.task;\n   \n\n    this.setState({\n      act: 1,\n      index: i\n    });\n\n    this.refs.task.focus();\n  }  \n\n\n  render() {\n    let datas = this.state.datas;\n    return (\n      <div className=\"App\">\n        <h2>{this.state.title}</h2>\n        <br/>\n        <h6>Enter the task in the input box, click on add button to add to the list. If task is exists, you can remove it (trash can button) or edit existing entry (pen button).</h6>\n        <form ref=\"myForm\" className=\"myForm\">\n          <div className=\"form-group row\">\n            <label className=\"col-sm-2 col-form-label\">Task</label>\n            <input type=\"text\" ref=\"task\" placeholder=\"your task\" className=\"formField form-control col-sm-9\"/>\n          </div>\n          <button onClick={(e)=>this.fSubmit(e)} className=\"myButton btn btn-success ml-2 btn-lg\">ADD </button>\n        </form>\n        <div className=\"todo\">\n          {datas.map((data, i) =>\n            <li key={i} className=\"myList\">\n              {i+1}. {data.task}\n              <div className=\"buttonsStyle\">\n              <button onClick={()=>this.fRemove(i)} className=\"myListButton btn btn-outline-success ml-2\"><i className=\"fas fa-trash-alt\"></i> </button>\n              <button onClick={()=>this.fEdit(i)} className=\"myListButton btn btn-outline-success ml-2\"><i className=\"fas fa-pencil-alt\"></i> </button>\n              </div>\n            </li>\n          )}\n        </div>\n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}