{"ast":null,"code":"var _jsxFileName = \"/home/dragana/Desktop/Primeri/gagily.github.io/to-do/src/App.js\";\nimport React from 'react';\nimport TodoList from './TodoList';\nimport TodoItems from './TodoItems';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInput = e => {\n      const itemText = e.target.value;\n      const currentItem = {\n        text: itemText,\n        key: Date.now()\n      };\n      this.setState({\n        currentItem\n      });\n    };\n\n    this.addItem = e => {\n      //prevent reloading from submitting the form\n      e.preventDefault();\n      const newItem = this.state.currentItem;\n\n      if (newItem.text !== '') {\n        const items = [...this.state.items, newItem];\n        this.setState({\n          items: items,\n          currentItem: {\n            text: '',\n            key: ''\n          }\n        });\n      }\n    };\n\n    this.deleteItem = key => {\n      const filteredItems = this.state.items.filter(item => {\n        return item.key !== key;\n      });\n      this.setState({\n        items: filteredItems\n      });\n    };\n\n    this.state = {\n      items: [],\n      currentItem: {\n        text: '',\n        key: ''\n      },\n      needsUpdate: false,\n      idOfTodoToUpdate: null\n    };\n    this.handleUpdateTodoClick = this.handleUpdateTodoClick.bind(this);\n  }\n\n  handleUpdateTodoClick(id) {\n    const todoToUpdate = this.state.items.filter(item => item.id === id)[0];\n    this.setState({\n      item: todoToUpdate.name,\n      needsUpdate: true,\n      idOfTodoToUpdate: id\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Todo app\"), React.createElement(\"p\", {\n      className: \"title-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Enter the task in the input box, click on add button to add to the list. To remove from the list, click on the task to be removed.\"), React.createElement(TodoList, {\n      addItem: this.addItem,\n      inputElement: this.inputElement,\n      handleInput: this.handleInput,\n      currentItem: this.state.currentItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(TodoItems, {\n      entries: this.state.items,\n      deleteItem: this.deleteItem,\n      updateItem: this.handleUpdateTodoClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/dragana/Desktop/Primeri/gagily.github.io/to-do/src/App.js"],"names":["React","TodoList","TodoItems","App","Component","constructor","handleInput","e","itemText","target","value","currentItem","text","key","Date","now","setState","addItem","preventDefault","newItem","state","items","deleteItem","filteredItems","filter","item","needsUpdate","idOfTodoToUpdate","handleUpdateTodoClick","bind","id","todoToUpdate","name","render","inputElement"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoList from './TodoList'\nimport TodoItems from './TodoItems'\nimport './App.css';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state= {\n\t\t\titems: [],\n\t\t\tcurrentItem: {\n\t\t\t\ttext:'',\n\t\t\t\tkey:''\n\t\t\t},\n\t\t\tneedsUpdate: false,\n            idOfTodoToUpdate: null\n\t\t}\n\t\tthis.handleUpdateTodoClick= this.handleUpdateTodoClick.bind(this)\n\t}\n\n\thandleInput = e => {\n\t\tconst itemText = e.target.value\n\t\tconst currentItem = {text: itemText, key: Date.now()}\n\t\tthis.setState({\n\t\t\tcurrentItem,\n\t\t})\n\t}\n\n\taddItem = e => {\n\t\t//prevent reloading from submitting the form\n\t\te.preventDefault()\n\t\tconst newItem = this.state.currentItem\n\t\tif (newItem.text !== '') {\n\t\t\tconst items= [...this.state.items, newItem]\n\t\t\tthis.setState({\n\t\t\t\titems: items,\n\t\t\t\tcurrentItem: {text: '', key: ''},\n\t\t\t})\n\t\t}\n\t}\n\n\tdeleteItem = key => {\n\t\tconst filteredItems = this.state.items.filter(item => {\n\t\t\treturn item.key !== key\n\t\t})\n\t\tthis.setState({\n\t\t\titems: filteredItems,\n\t\t})\n\t}\n\n\thandleUpdateTodoClick(id) {\n        const todoToUpdate = this.state.items.filter((item) => item.id === id)[0];\n        this.setState({\n            item: todoToUpdate.name,\n            needsUpdate: true,\n            idOfTodoToUpdate: id\n        });\n    }\n\n \n\n  render() {\n  \treturn (\n  \t\t<div className=\"App\">\n  \t\t\t<h2 className=\"title\">Todo app</h2>\n  \t\t\t<p className=\"title-text\">Enter the task in the input box, click on add button to add to the list. \n  \t\t\tTo remove from the list, click on the task to be removed.</p>\n  \t\t\t<TodoList \n  \t\t\t\taddItem={this.addItem}\n  \t\t\t\tinputElement={this.inputElement}\n  \t\t\t\thandleInput={this.handleInput}\n  \t\t\t\tcurrentItem={this.state.currentItem}\n  \t\t\t/>\n  \t\t\t<TodoItems \n  \t\t\t\tentries={this.state.items} \n  \t\t\t\tdeleteItem={this.deleteItem}\n  \t\t\t\tupdateItem={this.handleUpdateTodoClick}\n  \t\t\t/>\n  \t\t</div>\n  \t\t)\n  }\n  \t\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}